#ifndef CRC_H
#define CRC_H


#include <stdint.h>
#include <vector>
/*!
 @~russian
 * @brief В файле собраны собраны функции для подсчета crc-32.
 * Имя: CRC-32.
 * Ширина: 32 бита.
 * Полином: 0x04C11DB7.
 * Начальное значение: 0xFFFFFFFF.
 * Отражение входных данных: включено.
 * Отражение финальной контрольной суммы: включено.
 * Значение заключетельного числа для XOR с crc: 0xFFFFFFFF.
 */


/*!
 @~russian
 * @brief Простая функция для подсчета crc-32 за 1 раз по простому принципу сдвигового регистра.
 * @warning Необходимо учитывать, что функция не отвечает за инициализацию первого значения, входное-выходное отражение, xor финального значения. они все используются в crc-32.
 * @param   nData  Указатель на массив данных, для которых нужно посчитать crc.
 * @param wLength Количество байт в данных, для которых нужно посчитать crc.
 * @return                   Значение crc.
*/
uint32_t calc_CRC32_Simple(const uint8_t nData[], uint32_t wLength);


/*!
 @~russian
 * @brief Считает crc-32 за 1 раз по простому принципу использования look-up таблицы.
 * @warning Функция отвечает за инициализацию первого значения, входное-выходное отражение, xor финального значения.
 * @param   nData  Указатель на массив данных, для которых нужно посчитать crc.
 * @param wLength Количество байт в данных, для которых нужно посчитать crc.
 * @return                   Значение crc.
*/
uint32_t calc_CRC32(const uint8_t nData[], uint32_t wLength);



/*!
 @~russian
 * @brief Делает один шаг подсчета crc-32 принципу использования look-up таблицы.
 * @warning Необходимо учитывать, что функция не отвечает за инициализацию первого значения, входное-выходное отражение, xor финального значения. они все используются в crc-32.
 * @param   nData  Указатель на массив данных, для которых нужно посчитать crc.
 * @param wLength Количество байт в данных, для которых нужно посчитать crc.
 * @param crc_old Значение crc, посчитанное на основании предыдущих данных.
 * @return                   Значение crc.
*/
uint32_t calc_CRC_step(const std::vector<uint8_t> &nData, uint32_t wLength, uint32_t crc_old);

#endif // CRC_H
